class Node:
  def __init__(self,data):
    self.data=data
    self.next=None
class singleLinkedList:
  def __init__(self):
    self.head=None
  def insert_at_front(self,data):
    if self.head==None:
      self.head=Node(data)
    else:
      new=Node(data)
      new.next=self.head
      self.head=new
  def insert_at_end(self,data):
    if self.head==None:
      self.head=Node(data)
    else:
      temp=self.head
      while temp.next:
        temp=temp.next
      temp.next=Node(data)
  def delete_at_front(self):
    if self.head==None:
      print("Linked List is Empty")
    else:
      self.head=self.head.next
  def delete_at_end(self):
    if self.head==None:
      print("Linked List is Empty")
    elif self.head.next==None:
      self.head=None
    else:
      temp=self.head
      while temp.next.next:
        temp=temp.next
      temp.next=None
  def insert_at_a_position(self,pos,data):
    if self.head==None and pos>0:
      print("linked list is empty")
    elif pos==0:
      self.insert_at_front(data)
    else:
      i=0
      temp=self.head
      while temp.next and i<pos-1:
        temp=temp.next
        i=i+1
      if i==pos-1:
        new=Node(data)
        new.next=temp.next
        temp.next=new
      else:
        print("index out of range")
  def delete_at_a_position(self,pos):
    if self.head==None:
      print("linked list is empty")
    elif pos==0:
      self.delete_at_front()
    else:
      i=0
      temp=self.head
      while temp.next and i<pos-1:
        temp=temp.next
        i=i+1
      if i==pos-1:
        temp.next=temp.next.next
      else:
        print("Index out of range")
  def length(self):
    temp=self.head
    c=0
    while temp:
      temp=temp.next
      c+=1
    print(c)
  def print_linked_list(self):
    if self.head==None:
      print("Linked List is Empty")
    else:
      temp=self.head
      while temp:
        print(temp.data,end=" ")
        temp=temp.next
      print()
l=singleLinkedList()
l.insert_at_front(5)
l.insert_at_front(4)
l.insert_at_end(6)
l.insert_at_end(7)
l.insert_at_end(8)
l.print_linked_list()
l.delete_at_a_position(0)
l.print_linked_list()
l.length()
